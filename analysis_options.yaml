# Specify analysis options.
#
# Until there are meta linter rules, each desired lint must be explicitly enabled.
# See: https://github.com/dart-lang/linter/issues/288
#
# For a list of lints, see: http://dart-lang.github.io/linter/lints/
# See the configuration guide for more
# https://github.com/dart-lang/sdk/tree/master/pkg/analyzer#configuring-the-analyzer
#
# There are three similar analysis options files in the flutter repo:
#   - .analysis_options (this file)
#   - .analysis_options_repo
#   - packages/flutter/lib/analysis_options_user.yaml
#
# This file contains the analysis options used by Flutter editors, such as Atom.
# It is very similar to the .analysis_options_repo file in this same directory;
# the only difference (currently) is the public_member_api_docs option,
# which triggers too many messages to be used in editors.

analyzer:
  strong-mode: true
  errors:
    unused_import: error
    unused_local_variable: error
    dead_code: error
  exclude:
    - 'lib/i18n/*.dart'

linter:
  rules:
     # Errors
     - avoid_empty_else
     - comment_references
     - control_flow_in_finally
     - empty_statements
     - hash_and_equals
     - test_types_in_equals
     - throw_in_finally
     - unrelated_type_equality_checks
     - valid_regexps

     # Style
     - avoid_init_to_null
     - avoid_return_types_on_setters
     - await_only_futures
     - camel_case_types
     - directives_ordering
     - empty_catches
     - empty_constructor_bodies
     - library_names
     - library_prefixes
     - non_constant_identifier_names
     - omit_local_variable_types
     - prefer_final_fields
     - prefer_is_not_empty
     - slash_for_doc_comments
     - type_init_formals
